[package]
name = "dioxus-std"
version = "0.4.0"
authors = ["Jonathan Kelley", "Dioxus Labs", "ealmloff", "DogeDark"]
edition = "2021"
description = "Platform agnostic library for supercharging your productivity with Dioxus"
license = "MIT"
repository = "https://github.com/DioxusLabs/dioxus-std/"
homepage = "https://dioxuslabs.com"
keywords = ["dom", "gui", "dioxus", "standard", "hooks"]
categories = ["multimedia","os", "wasm"]

# This is making it harder to develop for a specific platform when examples are different targets.
# Workaround: Open example project as it's own project.
#[workspace]
#members = ["./examples/*"]

[features]
clipboard = ["dep:copypasta"]
notifications = ["dep:notify-rust"]
geolocation = ["dep:windows", "dep:futures-util", "dep:futures", "dep:web-sys", "dep:wasm-bindgen", "utils"]
color_scheme = ["dep:web-sys", "dep:wasm-bindgen", "dep:wasm-bindgen-futures"]
utils = ["dep:async-broadcast", "dep:uuid"]
i18n = ["dep:serde", "dep:serde_json", "dep:unic-langid"]
settings = ["dep:web-sys", "dep:wasm-bindgen", "dep:gloo-storage", "dep:tokio", "dep:fs4", "dep:notify", "dep:directories", "dep:cacao"]
all = ["clipboard", "notifications", "geolocation", "color_scheme", "utils", "i18n", "settings"]
default = ["settings"]

# CI testing
wasm-testing = ["geolocation", "color_scheme", "utils", "i18n", "settings"]
desktop-testing = ["clipboard", "notifications", "geolocation", "utils", "i18n", "settings"]

[dependencies]
dioxus = { version = "0.4" }
cfg-if = "1.0.0"

# utils
uuid = { version = "1.3.2", features = ["v4"], optional = true }
async-broadcast = { version = "0.5.1", optional = true }
# clipboard
copypasta = { version = "0.8.2", optional = true }
# notifications
notify-rust = { version = "4.8.0", optional = true }
# geolocation
futures = { version = "0.3.28", features = ["std"], optional = true }
futures-util = {version = "0.3.28", optional = true }
# i18n
serde = { version = "1.0.163", optional = true }
serde_json = { version = "1.0.96", optional = true }
unic-langid = { version = "0.9.1", features = ["serde"], optional = true }

[target.'cfg(not(target_family = "wasm"))'.dependencies]
# settings
tokio = { version = "1.32.0", features = ["fs"], optional = true }
fs4 = { version = "0.6.6", features = ["tokio", "tokio-async"], optional = true }
notify = { version = "6.1.1", default-features = false, features = ["macos_kqueue"], optional = true }
directories = { version = "5.0.1", optional = true }

[target.'cfg(any(target_os = "ios"))'.dependencies]
# settings
cacao = { version = "0.3.2", optional = true }

[target.'cfg(windows)'.dependencies]
windows = { version = "0.48.0", features = ["Foundation", "Devices_Geolocation"], optional = true }

[target.'cfg(target_family = "wasm")'.dependencies]
web-sys = { version = "0.3.60", features = ["Window", "MediaQueryList", "Navigator", "Geolocation", "PositionOptions"], optional = true }
wasm-bindgen = { version = "0.2.87", optional = true }
wasm-bindgen-futures = { version = "0.4.35", optional = true}
js-sys = "0.3.62"
# channel
uuid = {  version = "1.3.2", features = ["v4", "js"]}
# settings
gloo-storage = { version = "0.3.0", optional = true }

[package.metadata.docs.rs]
default-target = "x86_64-pc-windows-msvc"
no-default-features = true
features = ["desktop-testing"]

